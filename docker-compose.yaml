networks:
  pubel:

volumes:
  grafana_data:
  prometheus_data:

services:
  grafana:
    image: grafana/grafana:12.0.0
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_INSTALL_PLUGINS=grafana-xyzchart-panel, grafana-polystat-panel, yesoreyeram-infinity-datasource, volkovlabs-image-panel, betatech-qrcode-panel
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - pubel
    volumes:
      - ./docs/config/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
      - ./docs/config/grafana/dashboards:/var/lib/grafana/dashboards

  exporter:
    #image: pubeldev/prusa_exporter:latest
    build: .
    container_name: exporter
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./prusa.yml
        target: /app/prusa.yml
    ports:
      - "10009:10009"
      - 8514:8514/udp
    command: 
      - "--config.file=/app/prusa.yml"
      - "--lineprotocol.export=http://influxdb_exporter:9122"
      - "--log.level=debug"
    depends_on:
      - influxdb_exporter
    networks:
      - pubel

  influxdb_exporter:
    image: prom/influxdb-exporter:v0.12.0
    container_name: influxdb_exporter
    restart: unless-stopped
    command:
      - '--timestamps'
    ports:
      - 9122:9122
    depends_on:
      - prometheus
    networks:
      - pubel
  
  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: prometheus
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-remote-write-receiver'
    volumes:
      - ./docs/config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - pubel